set t_Co=256
let g:jellybeans_overrides = {
      \    'Todo': { 'guifg': '303030', 'guibg': 'f0f000',
      \              'ctermfg': 'Black', 'ctermbg': 'Yellow',
      \              'attr': 'bold' },
      \}
let g:jellybeans_use_lowcolor_black = 0 
colorscheme jellybeans "需要把http://www.vim.org/scripts/script.php?script_id=2555存入~/.vim/colors
" 以下暂时没搞懂
" set guifont=Monaco:h12
" let g:NERDTreeWinPos = "left"
" set guioptions-=T " Removes top toolbar
" set guioptions-=r " Removes right hand scroll bar
"
" if has('gui_running')
"    set guifont=Monaco\ 12
" endif

set tabstop=2
set shiftwidth=2
set hlsearch "设置搜索所有匹配高亮
"set dictionary+=$HOME/.mydict
"set dictionary+=/usr/share/dict/words
set isk+=- "把-分割的单词视为一个整体
set encoding=utf-8 fileencodings=ucs-bom,utf-8,cp936
set autoindent
set cindent
set sw=2
set ts=2
set expandtab
set number                     " 行号
au InsertEnter * hi StatusLine term=reverse ctermbg=5 gui=undercurl guisp=Magenta
au InsertLeave * hi StatusLine term=reverse ctermfg=0 ctermbg=2 gui=bold,reverse
syntax on                      " 语法高亮

":hi colorcolumn guibg=lightgreen
"set cc=81
set backspace=2 " make backspace work like most other apps

let mapleader='\'
nnoremap < v<
nnoremap > v>
vnoremap < <gv
vnoremap > >gv

map <F2> :%s/\r*//g<cr>:%s/\s*$//g<cr>:noh<cr>   "先清除^M,然后移除行尾空格
set pastetoggle=<F3>               "插入模式下转换粘贴模式
map <F4> :let &number=1-&number<CR>"显隐行号
map <F5> :Tlist<cr>                "显隐列表
"下面这个不能有注释
map <F6> :Gblame<cr>
map <F7> :Align =<cr>                "对其当前块等号
map <F10> :w<cr>                   "保存
"nnoremap <F9> :silent update<Bar>silent !google-chrome %:p &<CR> "ubuntu在chrome中打开文件
nnoremap <F9> :silent update<Bar>!open -a Google\ Chrome %<CR> "mac在chrome中打开文件
"map <F4> :set nopaste<cr>          "非粘贴模式
"map <F5> :set nonumber<cr>         "有行号
"map <F6> :set number<cr>           "无行号

nmap ]h <Plug>GitGutterNextHunk
nmap [h <Plug>GitGutterPrevHunk

"set cursorline "高亮光标所在行
let Tlist_Use_Right_Window=1 "方法列表放在屏幕的右侧
"let Tlist_Auto_Open=1       "自动打开方法列表

"set list "把制表符显示为^I,用$标示行尾（使用list分辨尾部的字符是tab还是空格）
set list
set listchars=tab:,.,trail:.,extends:#,nbsp:. " Highlight problematic whitespace

set nocompatible               " be iMproved
filetype off                   " required!

"Show hidden files in NerdTree
let NERDTreeShowHidden=1

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" " required!
Bundle 'gmarik/vundle'

" My Bundles here:
"
" original repos on github
Bundle 'Lokaltog/vim-easymotion'
Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
Bundle 'tpope/vim-rails.git'

Bundle 'L9'
Bundle 'FuzzyFinder'
Bundle 'kien/ctrlp.vim'
Bundle 'vim-scripts/snipMate'
"Bundle 'mattn/zencoding-vim'
Bundle 'mattn/emmet-vim'
Bundle 'scrooloose/nerdtree'
Bundle 'mileszs/ack.vim'
Bundle 'tyok/nerdtree-ack'
Bundle 'groenewege/vim-less'
Bundle 'kchmck/vim-coffee-script'
Bundle 'slim-template/vim-slim'
Bundle 'yaymukund/vim-rabl'
"Bundle 'godlygeek/tabular'
"Bundle 'plasticboy/vim-markdown'
Bundle 'eikenberry/acp'
Bundle 'nginx.vim'
Bundle 'tpope/vim-fugitive'
Bundle 'vim-scripts/taglist.vim'
Bundle 'edsono/vim-matchit'
"Bundle 'vim-scripts/ruby-matchit'
"Bundle 'mhinz/vim-signify'
Bundle 'airblade/vim-gitgutter'
Bundle 'vim-scripts/Align'
Bundle 'tomtom/tcomment_vim'
Bundle 'terryma/vim-multiple-cursors'
Bundle 'skalnik/vim-vroom'
Bundle "pangloss/vim-javascript"

Bundle "scrooloose/syntastic"
"在打开文件的时候检查
let g:syntastic_check_on_open=1
"let g:syntastic_ruby_checkers = ['mri', 'rubocop']


"Bundle 'Lokaltog/powerline'
Bundle 'git://github.com/Lokaltog/vim-powerline.git'
let g:Powerline_symbols = 'fancy'
let Powerline_symbols = 'compatible'
set laststatus=2 "始终显示状态栏
" set statusline=
" set statusline+=\ %f
" set statusline+=\ %{fugitive#statusline()}
" set statusline+=\ %y
" set statusline+=\ %{''.(&fenc!=''?&fenc:&enc).''}

"set statusline=format "不明白 貌似没用

filetype plugin indent on     " required!
"
" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..

function! SearchWord(word)
    let @/ = '\<' . a:word . '\>'
    normal n
endfunction
command! -nargs=1 SearchWord call SearchWord(<f-args>)
nmap ? :SearchWord
